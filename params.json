{"name":"Coreorm","tagline":"The CoreORM framework","body":"CoreORM/Framework\r\n=================\r\n\r\nPHP Object Relational Mapping package with DAO and managed thin models, supports read/write, multiple adaptors and more.\r\n'''NOTE''' currently only supports MySQL with fully ORM support, but dao can still be used on sqlite.\r\n\r\n### How to include this package in your project\r\nSimple add the following into your composer.json\r\n\r\n```\r\n    \"require\": {\r\n            \"coreorm/framework\": \"*\"\r\n    },\r\n    \"autoload\": {\r\n        \"files\": [\r\n            \"vendor/coreorm/framework/src/Core.php\"\r\n        ]\r\n    }\r\n```\r\n\r\n\r\n#### composer\r\n\r\n```\r\nrun\r\n    composer install --prefer-dist\r\n```\r\n\r\n\r\n#### NOTE: run composer install to enable autoload, if not all files are loading, run\r\n    composer dump-autoload\r\n\r\n#### unit tests:\r\nmake sure you do\r\n    chmod +x tests/phpunit so it can run tests\r\n\r\nalso, run the following sql in local (127.0.0.1) mysql instance to test adaptors\r\n\r\n```\r\n    CREATE DATABASE `coreorm` CHARACTER SET utf8;\r\n    USE `coreorm`;\r\n    GRANT all ON `coreorm`.* TO core@localhost IDENTIFIED BY 'test';\r\n\r\n# also add a slave user for it so we can simulate slave test\r\n\r\n    GRANT select ON `coreorm`.* TO core_slave@localhost IDENTIFIED BY 'test';\r\n\r\n# to test sqlite, make sure you do the following:\r\n    // under tests/support folder, run\r\n    mkdir tmp;chmod 775 tmp;\r\n```\r\n\r\n### setup the config this way.\r\n#### run time config using setDbConfig:\r\n\r\n```\r\n    setDbConfig('default', [default db adaptor name]);  // we need a default always\r\n    // next, set up the database adaptors in this way:\r\n    setDbConfig('database', array(\r\n        [adaptor name] => (array) [$options]\r\n    ));\r\n    // use mysql as an example:\r\n    setDbConfig('database', array(\r\n        'main' => array(\r\n            'dbname' => 'my_db_name',\r\n            'user' => 'db_user_name',\r\n            'pass' => 'db_password',\r\n            'host' => '127.0.0.1',\r\n            'port' => 3306, // optional\r\n            'cache' => false, // default is false, true to enable cache in memory - NOTE: will increase memory usage\r\n        ),\r\n        'db1' => array(\r\n            ...\r\n        ),\r\n    ));\r\n```\r\n\r\n#### generating models\r\nRun the following commands at project root\r\n\r\n```\r\n    chmod +x modeller\r\n```\r\n\r\nto generate model, make sure you put a config.php file somewhere, see example below:\r\n\r\n```\r\n    <?php\r\n    $dir = realpath(__DIR__ . '/Model/');\r\n    return array(\r\n        'database' => array(\r\n            'dbname' => 'model_test',\r\n            'user' => 'model',\r\n            'adaptor' => 'MySQL',\r\n            'pass' => 'test',\r\n            'host' => '127.0.0.1'\r\n        ),\r\n        'path' => $dir,\r\n        'namespace' => 'Example\\\\Model',\r\n        'model' => array(\r\n            'user' => array(\r\n                'relations' => [\r\n                    array(\r\n                        'table' => 'login',\r\n                        'join' => 'INNER',\r\n                        'type' => 'S',\r\n                        'on' => array(\r\n                            // support multiple on conditions\r\n                            // must be from left => right\r\n                            'id' => 'user_id'\r\n                        ),\r\n                        'condition' => ''\r\n                    ),\r\n                    array(\r\n                        'table' => 'attachment',\r\n                        'join' => 'LEFT',\r\n                        'type' => 'M',\r\n                        'on' => array(\r\n                            'id' => 'user_id'\r\n                        ),\r\n                        'condition' => ''\r\n                    )\r\n                ],\r\n            ),\r\n            'login' => array(\r\n            ),\r\n            'attachment' => array(\r\n                'class' => 'File'   // let's use a different name for the class...\r\n            ),\r\n        )\r\n    );\r\n```\r\n\r\nthen just run\r\n\r\n```\r\n    ./modeller config.php\r\n```\r\n\r\nall the models will be generated in the directory you specified in the configuration file.\r\n\r\n\r\n### Examples:\r\n\r\nFor examples, visit the [CoreORM\\Examples](https://github.com/coreorm/example)","google":"UA-54007203-1","note":"Don't delete this file! It's used internally to help with page regeneration."}